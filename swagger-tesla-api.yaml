swagger: '2.0'
info:
  version: '1.0'
  title: Tesla REST API
  description: 'Unofficial and unsupported (but currently working) REST API for monitoring and controlling Tesla Vehicles'
  license:
    name: Apache License Version 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
host: owner-api.teslamotors.com
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /oauth/token:
    post:
      description: >-
        Performs the login. Takes in an plain text email and password, matching
        the owner's login information for
        [https://my.teslamotors.com/user/login](https://my.teslamotors.com/user/login).

        Returns an `access_token` which is passed along as a header with all
        future requests to authenticate the user.

        You must provide the `Authorization: Bearer {access_token}` header in
        all other requests.

        The current client ID and secret are [available
        here](http://pastebin.com/fX6ejAHd)
      tags:
        - Authentication
      operationId: Get an Access Token
      produces:
        - application/json
      parameters:
        - name: access_token_input
          in: body
          description: Attributes of the access token
          schema:
            required:
              - grant_type
              - client_id
              - client_secret
              - email
              - password
            properties:
              grant_type:
                type: string
                description: The type of oAuth grant. Always "password"
                default: password
              client_id:
                type: string
                description: The oAuth client ID
                default: e4a9949fcfa04068f59abb5a658f2bac0a3428e4652315490b659d5ab3f35a9e
              client_secret:
                type: string
                description: The oAuth client secret
                default: c75f14bbadc8bee3a7594412c31416f8300256d7668ea7e6e7f06727bfb9d220
              email:
                type: string
                description: The email for my.teslamotors.com
                default: elon@teslamotors
              password:
                type: string
                description: The password for my.teslamotors.com
                default: edisonsux
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/GetAnAccessTokenResponse'
      x-unitTests:
        - request:
            method: POST
            uri: /oauth/token
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: KEYS
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: >-
              {  "access_token": "abc123",  "token_type": "bearer",
              "expires_in": 7776000,  "created_at": 1457385291,  "refresh_token"
              : "cba321"}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Get an Access Token1
          x-testDescription: >-
            Performs the login. Takes in an plain text email and password,
            matching the owner's login information for
            [https://my.teslamotors.com/user/login](https://my.teslamotors.com/user/login).

            Returns a `access_token` which is passed along as a header with all
            future requests to authenticate the user.

            You must provide the `Authorization: Bearer {access_token}` header
            in all other requests.

            The current client ID and secret are [available
            here](http://pastebin.com/fX6ejAHd)
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  /api/1/vehicles:
    get:
      description: Retrieve a list of your owned vehicles (includes vehicles not yet shipped!)
      tags:
        - Vehicles
      operationId: List All Vehicles
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ListAllVehiclesResponse'
      x-unitTests:
        - request:
            method: GET
            uri: /api/1/vehicles
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: KEYS
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: >-
              {  "response": [{    "color": null,    "display_name": null,
              "id": 321,    "option_codes":
              "MS01,RENA,TM00,DRLH,PF00,BT85,PBCW,RFPO,WT19,IBMB,IDPB,TR00,SU01,SC01,TP01,AU01,CH00,HP00,PA00,PS00,AD02,X020,X025,X001,X003,X007,X011,X013",
              "user_id": 123,    "vehicle_id": 1234567890,    "vin":
              "5YJSA1CN5CFP01657",    "tokens": ["x", "x"],    "state":
              "online"  }],  "count":1}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: List all Vehicles1
          x-testDescription: >-
            Retrieve a list of your owned vehicles (includes vehicles not yet
            shipped!)
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}':
    get:
      description: >-
        Retrieve the State and Settings of the given vehicle

        Expected Response - {"response":{"api_version":3,"autopark_state":"unavailable","autopark_state_v2":"ready","autopark_style":"dead_man","calendar_supported":true,"car_type":"x","car_version":"2.44.121","center_display_state":0,"dark_rims":false,"df":0,"dr":0,"exterior_color":"SignatureBlue","ft":0,"has_spoiler":true,"homelink_nearby":true,"last_autopark_error":"no_error","locked":true,"notifications_supported":true,"odometer":1607.101711,"parsed_calendar_supported":true,"perf_config":"P1","pf":0,"pr":0,"rear_seat_heaters":0,"rear_seat_type":0,"remote_start":false,"remote_start_supported":true,"rhd":false,"roof_color":"None","rt":0,"seat_type":0,"spoiler_type":"Passive","sun_roof_installed":0,"sun_roof_percent_open":null,"sun_roof_state":"unknown","third_row_seats":"FuturisFoldFlat","valet_mode":false,"valet_pin_needed":true,"vehicle_name":"","wheel_type":"AeroTurbine20"}}
      tags:
        - Vehicles
      operationId: Get Vehicle State And Settings
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/GetVehicleStateAndSettingsResponse'
      x-unitTests:
        - request:
            method: GET
            uri: /api/1/vehicles
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: KEYS
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: >-
              {  "response": [{    "color": null,    "display_name": null,
              "id": 321,    "option_codes":
              "MS01,RENA,TM00,DRLH,PF00,BT85,PBCW,RFPO,WT19,IBMB,IDPB,TR00,SU01,SC01,TP01,AU01,CH00,HP00,PA00,PS00,AD02,X020,X025,X001,X003,X007,X011,X013",
              "user_id": 123,    "vehicle_id": 1234567890,    "vin":
              "5YJSA1CN5CFP01657",    "tokens": ["x", "x"],    "state":
              "online"  }],  "count":1}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: List all Vehicles1
          x-testDescription: >-
            Retrieve a list of your owned vehicles (includes vehicles not yet
            shipped!)
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/mobile_enabled':
    get:
      description: >-
        Determines if mobile access to the vehicle is enabled.

        Expected response - {"response":true}
      tags:
        - Vehicles
      operationId: Is Mobile Enabled
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/IsMobileEnabledResponse'
      x-unitTests:
        - request:
            method: GET
            uri: /api/1/vehicles/1/mobile_enabled
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: KEYS
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: '{    "response": true}'
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Mobile Access1
          x-testDescription: Determines if mobile access to the vehicle is enabled.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/data_request/charge_state':
    get:
      description: >-
        Returns the state of charge in the battery.

        Example response - {"response":{"charging_state":"Disconnected","charge_limit_soc":80,"charge_limit_soc_std":90,"charge_limit_soc_min":50,"charge_limit_soc_max":100,"charge_to_max_range":false,"battery_heater_on":false,"not_enough_power_to_heat":false,"max_range_charge_counter":0,"fast_charger_present":false,"fast_charger_type":"<invalid>","battery_range":96.43,"est_battery_range":61.87,"ideal_battery_range":76.96,"battery_level":32,"usable_battery_level":31,"battery_current":-0.6,"charge_energy_added":8.17,"charge_miles_added_rated":30.0,"charge_miles_added_ideal":24.0,"charger_voltage":0,"charger_pilot_current":0,"charger_actual_current":0,"charger_power":0,"time_to_full_charge":0.0,"trip_charging":false,"charge_rate":0.0,"charge_port_door_open":false,"motorized_charge_port":true,"scheduled_charging_start_time":null,"scheduled_charging_pending":false,"user_charge_enable_request":null,"charge_enable_request":true,"eu_vehicle":true,"charger_phases":null,"charge_port_latch":"Blocking","charge_current_request":24,"charge_current_request_max":24,"managed_charging_active":false,"managed_charging_user_canceled":false,"managed_charging_start_time":null}}
      tags:
        - Vehicles
      operationId: Get Charge State
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ChargeStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/data_request/climate_state':
    get:
      description: >-
        Returns the current temperature and climate control state.

        Example response - {"response":{"inside_temp":7.8,"outside_temp":5.5,"driver_temp_setting":21.0,"passenger_temp_setting":20.0,"left_temp_direction":393,"right_temp_direction":281,"is_auto_conditioning_on":false,"is_front_defroster_on":3,"is_rear_defroster_on":false,"fan_status":0,"is_climate_on":false,"min_avail_temp":15.0,"max_avail_temp":28.0,"seat_heater_left":0,"seat_heater_right":0,"seat_heater_rear_left":0,"seat_heater_rear_right":0,"seat_heater_rear_center":0,"seat_heater_rear_right_back":0,"seat_heater_rear_left_back":0,"smart_preconditioning":false}}
      tags:
        - Vehicles
      operationId: Get Climate State
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ClimateStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/data_request/drive_state':
    get:
      description: >-
        Returns the driving and position state of the vehicle.

        Example response - {"response":{"shift_state":null,"speed":null,"latitude":46.745719,"longitude":7.647721,"heading":247,"gps_as_of":1480148100}}
      tags:
        - Vehicles
      operationId: Get Drive State
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DriveStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/data_request/gui_settings':
    get:
      description: >-
        Returns various information about the GUI settings of the car, such as
        unit format and range display.

        Example response - {"response":{"gui_distance_units":"km/hr","gui_temperature_units":"C","gui_charge_rate_units":"km/hr","gui_24_hour_time":true,"gui_range_display":"Ideal"}}
      tags:
        - Vehicles
      operationId: Get Gui Settings
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/GuiSettingsResponse'
      x-unitTests:
        - request:
            method: GET
            uri: /api/1/vehicles/1/data_request/gui_settings
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: KEYS
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: >-
              {  "response": {    "gui_distance_units": "mi/hr",
              "gui_temperature_units": "F",    "gui_charge_rate_units":
              "mi/hr",    "gui_24_hour_time": false,    "gui_range_display":
              "Rated"  }}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: GUI Settings1
          x-testDescription: >-
            Returns various information about the GUI settings of the car, such
            as unit format and range display.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/data_request/vehicle_state':
    get:
      description: >-
        Returns the vehicle's physical state, such as which doors are open.

        Example response - {"response":{"api_version":3,"autopark_state":"unavailable","autopark_state_v2":"ready","autopark_style":"dead_man","calendar_supported":true,"car_type":"x","car_version":"2.44.121","center_display_state":0,"dark_rims":false,"df":0,"dr":0,"exterior_color":"SignatureBlue","ft":0,"has_spoiler":true,"homelink_nearby":true,"last_autopark_error":"no_error","locked":true,"notifications_supported":true,"odometer":1607.101711,"parsed_calendar_supported":true,"perf_config":"P1","pf":0,"pr":0,"rear_seat_heaters":0,"rear_seat_type":0,"remote_start":false,"remote_start_supported":true,"rhd":false,"roof_color":"None","rt":0,"seat_type":0,"spoiler_type":"Passive","sun_roof_installed":0,"sun_roof_percent_open":null,"sun_roof_state":"unknown","third_row_seats":"FuturisFoldFlat","valet_mode":false,"valet_pin_needed":true,"vehicle_name":"","wheel_type":"AeroTurbine20"}}
      tags:
        - Vehicles
      operationId: Get Vehicle State
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/VehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

# These commands alter the vehicles state, and return result (true/false) to indicate success, and if failure reason contains the cause of failure.
  '/api/1/vehicles/{vehicle_id}/command/wake_up':
    post:
      description: Wakes up the car from the sleep state. Necessary to get some data from the car.
      tags:
        - Vehicles
      operationId: Wake Vehicle
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/set_valet_mode':
    post:
      description: >-
        Sets valet mode on or off with a PIN to disable it from within the car. Reuses last PIN from previous valet session.
        Valet Mode limits the car's top speed to 70MPH and 80kW of acceleration power. It also disables Homelink, Bluetooth and
        Wifi settings, and the ability to disable mobile access to the car. It also hides your favorites, home, and work
        locations in navigation.
      tags:
        - Vehicles
      operationId: Set Valet Mode
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
        - name: enabled
          in: query
          type: boolean
          description: Whether to enable or disable valet mode.
        - name: password
          in: query
          type: integer
          description: A 4 digit PIN code to unlock the car - required if on = true
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/reset_valet_pin':
    post:
      description: Resets the PIN set for valet mode, if set.
      tags:
        - Vehicles
      operationId: Reset Valet Mode
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/charge_port_door_open':
    post:
      description: Opens the charge port. Does not close the charge port
      tags:
        - Vehicles
      operationId: Open Charge Port Door
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/charge_max_range':
    post:
      description: Set the charge mode to max range (100% under the new percentage system introduced in 4.5). Use sparingly!
      tags:
        - Vehicles
      operationId: Set Charge Limit To Maximum
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/set_charge_limit':
    post:
      description: Set the charge limit to the minimum limit. The example on docs.timdorr.apiary.io of sending ?percent=x does not work. This call always sets to the minimum limit.
      tags:
        - Vehicles
      operationId: Set Charge Limit To Minimum
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"

      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/charge_standard':
    post:
      description: Set the charge limit to the standard limit
      tags:
        - Vehicles
      operationId: Set Charge Limit To Standard
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"

      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/charge_start':
    post:
      description: 'Start charging. Must be plugged in, have power available, and not have reached your charge limit.'
      tags:
        - Vehicles
      operationId: Start Charging
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/charge_stop':
    post:
      description: 'Stop charging. Must already be charging.'
      tags:
        - Vehicles
      operationId: Stop Charging
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/flash_lights':
    post:
      description: >-
        Flash the lights once.

        Example response - {"response":{"reason":"","result":true}}
      tags:
        - Vehicles
      operationId: Flash Lights
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/honk_horn':
    post:
      description: 'Honk the horn once.'
      tags:
        - Vehicles
      operationId: Honk Horn
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/door_unlock':
    post:
      description: 'Unlock the car''s doors. (All of them??)'
      tags:
        - Vehicles
      operationId: Unlock Doors
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/door_lock':
    post:
      description: 'Lock the car''s doors.'
      tags:
        - Vehicles
      operationId: Lock Doors
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/auto_conditioning_start':
    post:
      description: Start the climate control system. Will cool or heat automatically, depending on set temperature.
      tags:
        - Vehicles
      operationId: Start Temperature Regulation
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/auto_conditioning_stop':
    post:
      description: Stop the climate control system.
      tags:
        - Vehicles
      operationId: Stop Temperature Regulation
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/set_temps':
    post:
      description: Set the temperature target for the HVAC system to the minimum values
      tags:
        - Vehicles
      operationId: Set Temperature Regulation To Minimum Temperature
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/sun_roof_control':
    post:
      description: Controls the car's panoramic roof, if installed.
      tags:
        - Vehicles
      operationId: Control Sun Roof
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
        - name: state
          in: query
          type: string
#`open` (enum[string])
#        The desired state of the panoramic roof. The approximate percent open values for each state are `open` = 100%, `close` = 0%, `comfort` = 80%, and `vent` = ~15%
#        + Members
#            + `open` - Open the roof fully
#            + `close` - Close the roof completely
#            + `comfort` - Open to the comfort (80%) setting
#            + `vent` - Open the roof to the vent (~15%) setting
#            + `move` - Indicates you will provide a percentage to move the roof.
#    + percent: `50` (number, optional) - The percentage to move the roof to.
        - name: percent
          in: query
          type: integer
          description: The percentage to move the roof to.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
#      responses:
#        '400':
#          description: ''
#          schema:
#            $ref: '#/definitions/AlterVehicleStateResponse400'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/remote_start_drive':
    post:
      description: Start the car for keyless driving. Must start driving within 2 minutes of issuing this request.
      tags:
        - Vehicles
      operationId: Enable Remote Driving
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
        - name: password
          in: query
          type: string
          description: The password to the authenticated my.teslamotors.com account.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false

  '/api/1/vehicles/{vehicle_id}/command/trunk_open':
    post:
      description: Open the trunk or frunk.
      tags:
        - Vehicles
      operationId: Open Trunk
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authorization_header"
        - $ref: "#/parameters/vehicle_id"
        - name: which_trunk
          in: query
          type: string
          description: The trunk to open. `rear` is the only one known currently.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AlterVehicleStateResponse'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false


definitions:
  GetAnAccessTokenResponse:
    title: Get an Access Token Response
    type: object
    properties:
      access_token:
        type: string
      token_type:
        type: string
      expires_in:
        type: integer
        format: int32
      created_at:
        type: integer
        format: int32
      refresh_token:
        type: string
    required:
      - access_token
      - token_type
      - expires_in
      - created_at
      - refresh_token

  ListAllVehiclesResponse:
    title: List all Vehicles Response
    type: object
    properties:
      response:
        type: array
        items:
          properties:
            id:
              type: integer
              format: int64
            vehicle_id:
              type: integer
              format: int64
            vin:
              type: string
            display_name:
              type: string
            option_codes:
              type: string
            color:
              type: string
# No idea what these could be for
# TODO map them properly
#            tokens:
#              type: array
            state:
              type: string
            in_service:
              type: string
            id_s:
              type: string
            remote_start_enabled:
              type: boolean
            calendar_enabled:
              type: boolean
            notifications_enabled:
              type: boolean
            backseat_token:
              type: string
            backseat_token_updated_at:
              type: integer
              format: int64
      count:
        type: integer
        format: int32
    required:
      - response
      - count

# This could possibly be merged with ListAllVehiclesResponse, but since we're reverse-engineering someone else's
# service, it's safe to keep it separate
  GetVehicleStateAndSettingsResponse:
    title: Get Vehicle State And Settings Response
    description: >-

      Expected reponse - {"response":[{"id":45800807942393617,"vehicle_id":1419973848,"vin":"5YJXCCE22GF009859","display_name":"009859","option_codes":"MDLX,REEU,AD15,AF00,AH00,AU00,BC0B,BP00,BS00,BTX4,CC03,CDM0,CF00,CH04,COCH,PPSB,CW00,DA02,DRLH,DSH5,DV4W,FG00,FR01,GLFR,HP00,IDHM,IX00,LP00,LT1B,ME02,MI00,MX01,OSSB,PA00,PF00,PI00,PK00,PS00,QPBT,RFPX,S01B,SC01,SP01,SR01,ST01,SU01,TIM7,TM00,TP00,TR01,TRA1,TW01,UM01,UTPW,WT20,X001,X003,X007,X011,X014,X021,X025,X026,X028,X031,X037,X039,X041,X043,YFCC","color":null,"tokens":["3b90dda45b9f7776","be6bea1a7126e413"],"state":"online","in_service":false,"id_s":"45800807942393617","remote_start_enabled":true,"calendar_enabled":true,"notifications_enabled":true,"backseat_token":null,"backseat_token_updated_at":null}],"count":1}
    type: object
    properties:
      response:
        type: object
        properties:
          id:
            type: integer
            format: int64
          vehicle_id:
            type: integer
            format: int64
          vin:
            type: string
          display_name:
            type: string
          option_codes:
            type: string
          color:
            type: string
# No idea what these could be for
# TODO map them properly
#          tokens:
#            type: array
          state:
            type: string
          in_service:
            type: string
          id_s:
            type: string
          remote_start_enabled:
            type: boolean
          calendar_enabled:
            type: boolean
          notifications_enabled:
            type: boolean
          backseat_token:
            type: string
          backseat_token_updated_at:
            type: integer
            format: int64
    required:
      - response

  IsMobileEnabledResponse:
    title: Mobile Enabled Response
    type: object
    properties:
      response:
        type: boolean
    required:
      - response

  ChargeStateResponse:
    title: Charge State Response
    type: object
    properties:
      response:
        type: object
        properties:
          charging_state:
            type: string
            description: '"Complete", "Charging", "Starting", "Stopped", "Disconnected", ...'
          charge_limit_soc:
            type: integer
          charge_limit_soc_std:
            type: integer
          charge_limit_soc_min:
            type: integer
          charge_limit_soc_max:
            type: integer
          charge_to_max_range:
            type: boolean
            description: current std/max-range setting
          battery_heater_on:
            type: boolean
          not_enough_power_to_heat:
            type: boolean
          max_range_charge_counter:
            type: integer
          fast_charger_present:
            type: boolean
            description: connected to Supercharger?
          fast_charger_type:
            type: string
          battery_range:
            type: number
            description: rated miles
          est_battery_range:
            type: number
            description: range estimated from recent driving
          ideal_battery_range:
            type: number
            description: ideal miles
          battery_level:
            type: integer
            description: charge percentage
          battery_current:
            type: number
            description: current flowing into battery
          usable_battery_level:
            type: integer
          charge_energy_added:
            type: number
          charge_miles_added_rated:
            type: number
          charge_miles_added_ideal:
            type: number
          charger_voltage:
            type: integer
            description: only has value while charging
          charger_pilot_current:
            type: integer
            description: max current allowed by charger & adapter
          charger_actual_current:
            type: integer
            description: current actually being drawn
          charger_power:
            type: integer
            description: kW (rounded down) of charger
          time_to_full_charge:
            type: number
            description: valid only while charging
          trip_charging:
            type: boolean
          charge_rate:
            type: number
            description: miles/hr charging or -1 if not charging
          charge_port_door_open:
            type: boolean
          motorized_charge_port:
            type: boolean
          scheduled_charging_start_time:
            type: integer
            format: int64
            description: seconds since the epoc
          scheduled_charging_pending:
            type: boolean
          user_charge_enable_request:
            type: string
          charge_enable_request:
            type: boolean
          eu_vehicle:
            type: boolean
          charger_phases:
            type: integer
          charge_port_latch:
            type: string
            description: '"Engaged", ...'
          charge_current_request:
            type: integer
          charge_current_request_max:
            type: integer
          managed_charging_active:
            type: boolean
          managed_charging_user_canceled:
            type: boolean
          managed_charging_start_time:
            type: integer
            format: int64
            description: seconds since the epoc
    required:
      - response

  ClimateStateResponse:
    title: Climate Settings Response
    type: object
    properties:
      response:
        type: object
        properties:
          inside_temp:
            type: number
            description: degC inside car
          outside_temp:
            type: number
            description: degC outside car or null
          driver_temp_setting:
            type: number
            description: degC of driver temperature setpoint
          passenger_temp_setting:
            type: number
            description: degC of passenger temperature setpoint
          left_temp_direction:
            type: integer
          right_temp_direction:
            type: integer
          is_auto_conditioning_on:
            type: string
          is_front_defroster_on:
            type: string
          is_rear_defroster_on:
            type: string
          fan_status:
            type: string
            description: fan speed 0-6 or null
          is_climate_on:
            type: boolean
          min_avail_temp:
            type: number
          max_avail_temp:
            type: number
          seat_heater_left:
            type: integer
          seat_heater_right:
            type: integer
          seat_heater_rear_left:
            type: integer
          seat_heater_rear_right:
            type: integer
          seat_heater_rear_center:
            type: integer
          seat_heater_rear_right_back:
            type: integer
          seat_heater_rear_left_back:
            type: integer
          smart_preconditioning:
            type: boolean
    required:
      - response

  DriveStateResponse:
    title: Drive State Response
    type: object
    properties:
      response:
        type: object
        properties:
          shift_state:
            type: string
          speed:
            type: number
          latitude:
            type: number
            description: degrees North of the equator (negative = South)
          longitude:
            type: number
            description: degrees East of the prime meridian (negative = West)
          heading:
            type: integer
            description: integer compass heading, 0-359
          gps_as_of:
            type: integer
            description: time of this GPS reading - seconds since the epoc
    required:
      - response

  GuiSettingsResponse:
    title: Gui Settings Response
    type: object
    properties:
      response:
        type: object
        properties:
          gui_distance_units:
            type: string
            description: '"km/hr", "mi/hr"'
          gui_temperature_units:
            type: string
            description: '"C", "F"'
          gui_charge_rate_units:
            type: string
            description: '"km/hr", "mi/hr"'
          gui_24_hour_time:
            type: boolean
          gui_range_display:
            type: string
            description: '"Rated", "Ideal", ...'
    required:
      - response

  VehicleStateResponse:
    title: Vehicle State Response
    type: object
    properties:
      response:
        type: object
        properties:
          api_version:
            type: integer
          autopark_state:
            type: string
          autopark_state_v2:
            type: string
          autopark_style:
            type: string
          calendar_supported:
            type: boolean
          car_type:
            type: string
          car_version:
            type: string
            description: car firmware version
          center_display_state:
            type: integer
          dark_rims:
            type: boolean
          df:
            type: integer
            description: boolean - driver's side front door open
          dr:
            type: integer
            description: boolean - driver's side rear door open
          exterior_color:
            type: string
          ft:
            type: integer
            description: boolean - front trunk is open
          has_spoiler:
            type: boolean
          homelink_nearby:
            type: boolean
          last_autopark_error:
            type: string
          locked:
            type: boolean
          notifications_supported:
            type: boolean
          odometer:
            type: number
          parsed_calendar_supported:
            type: boolean
          perf_config:
            type: string
            description: '"P1", "Base", ...'
          pf:
            type: integer
            description: passenger's side front door open
          pr:
            type: integer
            description: passenger's side rear door open
          rear_seat_heaters:
            type: integer
          rear_seat_type:
            type: integer
          remote_start:
            type: boolean
          remote_start_supported:
            type: boolean
          rhd:
            type: boolean
          roof_color:
            type: string
          rt:
            type: integer
            description: rear trunk is open
          seat_type:
            type: integer
          spoiler_type:
            type: string
          sun_roof_installed:
            type: integer
          sun_roof_percent_open:
            type: integer
          sun_roof_state:
            type: string
          third_row_seats:
            type: string
          valet_mode:
            type: boolean
          valet_pin_needed:
            type: boolean
          vehicle_name:
            type: string
          wheel_type:
            type: string
    required:
      - response

  AlterVehicleStateResponse:
    title: Vehicle State Response
    type: object
    description: The response from any POST request to alter the vehicle state.
    properties:
      response:
        type: object
        properties:
          result:
            type: boolean
          reason:
            type: string

#  AlterVehicleStateResponse400:
#    title: Vehicle State Response 400
#    type: object
#    description: A response from any POST request to alter the vehicle state with an HTTP error code 400
#    properties:
#      response:
#        type: string
#      error:
#        type: string
#      error_description:
#        type: string

# define reusable parameters:
parameters:
  vehicle_id:
    name: vehicle_id
    in: path
    required: true
    type: integer
    format: int64
    description: The id of the Vehicle.

  authorization_header:
    name: authorization
    in: header
    type: string
    required: true
    description: "Bearer {access_token}"
